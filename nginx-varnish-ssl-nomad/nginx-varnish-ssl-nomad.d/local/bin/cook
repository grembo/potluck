#!/bin/sh
RUNS_IN_NOMAD=true
COOKLOG=/var/log/cook.log

pot_seasoned_exit() {
    [ ! -e /usr/local/etc/pot-is-seasoned ] && \
      touch /usr/local/etc/pot-is-seasoned
    # If this pot flavour is blocking (i.e. it should not return), there is
    # no /tmp/environment.sh created by pot and we now alter configuration
    # block indefinitely
    if [ "$RUNS_IN_NOMAD" = "true" ]; then
        service cook onestop || true
        service cook onedisable || true
        /bin/sh /etc/rc
        tail -f /dev/null
    fi
    exit 0
}

# No need to change this, just ensures configuration is done only once
[ -e /usr/local/etc/pot-is-seasoned ] && pot_seasoned_exit

########################################################################
## Functions and settings
########################################################################

log() {
    echo "$(date '+%Y-%m-%dT%H:%M:%S') $*" | tee -a $COOKLOG
}

set -e
export HOME=/root

if [ -e /tmp/environment.sh ]
then
    # shellcheck disable=SC1091
    . /tmp/environment.sh

    # XXX: Remove some things from here later
    cp -a /tmp/environment.sh /root/.env.cook
fi

########################################################################
## Get command line flag options used for nomad images
## Convert parameters to variables if passed (overwrite environment)
########################################################################
OPTIND=1
while getopts d:s:b: option
do
    # shellcheck disable=SC2220
    case "${option}"
    in
      d) DOMAIN=${OPTARG}
         export DOMAIN
         ;;
      s) SERVERPORT=${OPTARG}
         export SERVERPORT
         ;;
      b) BUCKET=${OPTARG}
         export BUCKET
         ;;
    esac
done
shift "$((OPTIND-1))"

########################################################################
## Check config
########################################################################

required_args="DOMAIN SERVERPORT BUCKET"
optional_args=""

for var in $required_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "$var is unset - see documentation to configure this flavour."
    exit 1
  fi
done

for var in $optional_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "Optional $var is unset - see documentation to configure this flavour."
  fi
done

########################################################################
## Provision image
########################################################################

# shellcheck disable=SC2086
export PATH="/usr/local/share/cook/bin:$PATH"

log "stop nginx service, kill nginx if around"
service nginx onestop || true
pkill nginx || true

log "Creating self-sign certificates for nginx"
configure-ssl.sh

log "Configure nginx"
configure-nginx.sh

log "Start nginx"
timeout --foreground 120 \
  sh -c 'while ! service nginx status; do
    service nginx start || true; sleep 5;
  done'

# end script placement
log "Exit seasoned"
pot_seasoned_exit
